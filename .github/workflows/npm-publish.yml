name: NPM CD - Build, Test & Publish

on:
  workflow_call:
    inputs:
      node-version:
        required: false
        default: '24.x'
        type: string
        description: Node.js version to use for the build.
      pwsh:
        required: false
        default: true
        type: boolean
        description: Whether to install PowerShell for the build.
      build-script:
        required: false
        default: 'build'
        type: string
        description: Custom build script to run.
      test-script:
        required: false
        default: 'test'
        type: string
        description: Custom test script to run.
      npm_tag:
        description: NPM tag to publish the package (e.g., latest, beta, etc.)
        required: false
        default: 'latest'
        type: string
      dry_run:
        description: Perform a dry run (true/false)
        type: boolean
        default: false
        required: false

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Node.js v${{ inputs.node-version }} Up
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          registry-url: 'https://registry.npmjs.org/'

      - name: Install PowerShell
        if: inputs.pwsh
        uses: PSModule/Install-PowerShell@v1

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run ${{ inputs.build-script }}

      - name: Run Unit Tests
        run: npm run ${{ inputs.test-script }}

      - name: Publish to NPM (Dry Run)
        if: github.ref == 'refs/heads/main' && inputs.dry_run == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag ${{ inputs.npm_tag }} --dry-run

      - name: Publish to NPM
        if: github.ref == 'refs/heads/main' && inputs.dry_run == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public --tag ${{ inputs.npm_tag }}
